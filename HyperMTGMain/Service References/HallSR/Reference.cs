//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace HyperMTGMain.HallSR {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HallSR.IHall", CallbackContract=typeof(HyperMTGMain.HallSR.IHallCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IHall {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHall/Connect", ReplyAction="http://tempuri.org/IHall/ConnectResponse")]
        void Connect(HyperServer.Common.Client client);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHall/Connect", ReplyAction="http://tempuri.org/IHall/ConnectResponse")]
        System.IAsyncResult BeginConnect(HyperServer.Common.Client client, System.AsyncCallback callback, object asyncState);
        
        void EndConnect(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, Action="http://tempuri.org/IHall/Disconnect")]
        void Disconnect(System.Guid client);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, AsyncPattern=true, Action="http://tempuri.org/IHall/Disconnect")]
        System.IAsyncResult BeginDisconnect(System.Guid client, System.AsyncCallback callback, object asyncState);
        
        void EndDisconnect(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IHall/CreateRoom")]
        void CreateRoom(System.Guid client, HyperServer.Common.GameMode mode, HyperServer.Common.GameFormat format, int size, string desc, string password);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IHall/CreateRoom")]
        System.IAsyncResult BeginCreateRoom(System.Guid client, HyperServer.Common.GameMode mode, HyperServer.Common.GameFormat format, int size, string desc, string password, System.AsyncCallback callback, object asyncState);
        
        void EndCreateRoom(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IHall/JoinRoom")]
        void JoinRoom(System.Guid client, System.Guid room, string password);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IHall/JoinRoom")]
        System.IAsyncResult BeginJoinRoom(System.Guid client, System.Guid room, string password, System.AsyncCallback callback, object asyncState);
        
        void EndJoinRoom(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHallCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IHall/OnConnect")]
        void OnConnect(HyperServer.Common.ConnectionResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IHall/OnConnect")]
        System.IAsyncResult BeginOnConnect(HyperServer.Common.ConnectionResult result, System.AsyncCallback callback, object asyncState);
        
        void EndOnConnect(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IHall/OnEnterHall")]
        void OnEnterHall(System.Guid client);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IHall/OnEnterHall")]
        System.IAsyncResult BeginOnEnterHall(System.Guid client, System.AsyncCallback callback, object asyncState);
        
        void EndOnEnterHall(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IHall/OnLeaveHall")]
        void OnLeaveHall(System.Guid client);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IHall/OnLeaveHall")]
        System.IAsyncResult BeginOnLeaveHall(System.Guid client, System.AsyncCallback callback, object asyncState);
        
        void EndOnLeaveHall(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IHall/OnRefreshRooms")]
        void OnRefreshRooms(System.Collections.Generic.List<HyperServer.Common.Room> rooms);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IHall/OnRefreshRooms")]
        System.IAsyncResult BeginOnRefreshRooms(System.Collections.Generic.List<HyperServer.Common.Room> rooms, System.AsyncCallback callback, object asyncState);
        
        void EndOnRefreshRooms(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IHall/OnCreateRoom")]
        void OnCreateRoom(System.Guid room);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IHall/OnCreateRoom")]
        System.IAsyncResult BeginOnCreateRoom(System.Guid room, System.AsyncCallback callback, object asyncState);
        
        void EndOnCreateRoom(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IHall/OnJoinRoom")]
        void OnJoinRoom(HyperServer.Common.JoinRoomResult result, System.Guid room);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IHall/OnJoinRoom")]
        System.IAsyncResult BeginOnJoinRoom(HyperServer.Common.JoinRoomResult result, System.Guid room, System.AsyncCallback callback, object asyncState);
        
        void EndOnJoinRoom(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IHall/OnRefreshPlayers")]
        void OnRefreshPlayers(System.Collections.Generic.List<HyperServer.Common.Client> clients);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IHall/OnRefreshPlayers")]
        System.IAsyncResult BeginOnRefreshPlayers(System.Collections.Generic.List<HyperServer.Common.Client> clients, System.AsyncCallback callback, object asyncState);
        
        void EndOnRefreshPlayers(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHallChannel : HyperMTGMain.HallSR.IHall, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HallClient : System.ServiceModel.DuplexClientBase<HyperMTGMain.HallSR.IHall>, HyperMTGMain.HallSR.IHall {
        
        private BeginOperationDelegate onBeginConnectDelegate;
        
        private EndOperationDelegate onEndConnectDelegate;
        
        private System.Threading.SendOrPostCallback onConnectCompletedDelegate;
        
        private BeginOperationDelegate onBeginDisconnectDelegate;
        
        private EndOperationDelegate onEndDisconnectDelegate;
        
        private System.Threading.SendOrPostCallback onDisconnectCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateRoomDelegate;
        
        private EndOperationDelegate onEndCreateRoomDelegate;
        
        private System.Threading.SendOrPostCallback onCreateRoomCompletedDelegate;
        
        private BeginOperationDelegate onBeginJoinRoomDelegate;
        
        private EndOperationDelegate onEndJoinRoomDelegate;
        
        private System.Threading.SendOrPostCallback onJoinRoomCompletedDelegate;
        
        public HallClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public HallClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public HallClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public HallClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public HallClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ConnectCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DisconnectCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CreateRoomCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> JoinRoomCompleted;
        
        public void Connect(HyperServer.Common.Client client) {
            base.Channel.Connect(client);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginConnect(HyperServer.Common.Client client, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginConnect(client, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndConnect(System.IAsyncResult result) {
            base.Channel.EndConnect(result);
        }
        
        private System.IAsyncResult OnBeginConnect(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HyperServer.Common.Client client = ((HyperServer.Common.Client)(inValues[0]));
            return this.BeginConnect(client, callback, asyncState);
        }
        
        private object[] OnEndConnect(System.IAsyncResult result) {
            this.EndConnect(result);
            return null;
        }
        
        private void OnConnectCompleted(object state) {
            if ((this.ConnectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ConnectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ConnectAsync(HyperServer.Common.Client client) {
            this.ConnectAsync(client, null);
        }
        
        public void ConnectAsync(HyperServer.Common.Client client, object userState) {
            if ((this.onBeginConnectDelegate == null)) {
                this.onBeginConnectDelegate = new BeginOperationDelegate(this.OnBeginConnect);
            }
            if ((this.onEndConnectDelegate == null)) {
                this.onEndConnectDelegate = new EndOperationDelegate(this.OnEndConnect);
            }
            if ((this.onConnectCompletedDelegate == null)) {
                this.onConnectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnConnectCompleted);
            }
            base.InvokeAsync(this.onBeginConnectDelegate, new object[] {
                        client}, this.onEndConnectDelegate, this.onConnectCompletedDelegate, userState);
        }
        
        public void Disconnect(System.Guid client) {
            base.Channel.Disconnect(client);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDisconnect(System.Guid client, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDisconnect(client, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDisconnect(System.IAsyncResult result) {
            base.Channel.EndDisconnect(result);
        }
        
        private System.IAsyncResult OnBeginDisconnect(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid client = ((System.Guid)(inValues[0]));
            return this.BeginDisconnect(client, callback, asyncState);
        }
        
        private object[] OnEndDisconnect(System.IAsyncResult result) {
            this.EndDisconnect(result);
            return null;
        }
        
        private void OnDisconnectCompleted(object state) {
            if ((this.DisconnectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DisconnectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DisconnectAsync(System.Guid client) {
            this.DisconnectAsync(client, null);
        }
        
        public void DisconnectAsync(System.Guid client, object userState) {
            if ((this.onBeginDisconnectDelegate == null)) {
                this.onBeginDisconnectDelegate = new BeginOperationDelegate(this.OnBeginDisconnect);
            }
            if ((this.onEndDisconnectDelegate == null)) {
                this.onEndDisconnectDelegate = new EndOperationDelegate(this.OnEndDisconnect);
            }
            if ((this.onDisconnectCompletedDelegate == null)) {
                this.onDisconnectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDisconnectCompleted);
            }
            base.InvokeAsync(this.onBeginDisconnectDelegate, new object[] {
                        client}, this.onEndDisconnectDelegate, this.onDisconnectCompletedDelegate, userState);
        }
        
        public void CreateRoom(System.Guid client, HyperServer.Common.GameMode mode, HyperServer.Common.GameFormat format, int size, string desc, string password) {
            base.Channel.CreateRoom(client, mode, format, size, desc, password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateRoom(System.Guid client, HyperServer.Common.GameMode mode, HyperServer.Common.GameFormat format, int size, string desc, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateRoom(client, mode, format, size, desc, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndCreateRoom(System.IAsyncResult result) {
            base.Channel.EndCreateRoom(result);
        }
        
        private System.IAsyncResult OnBeginCreateRoom(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid client = ((System.Guid)(inValues[0]));
            HyperServer.Common.GameMode mode = ((HyperServer.Common.GameMode)(inValues[1]));
            HyperServer.Common.GameFormat format = ((HyperServer.Common.GameFormat)(inValues[2]));
            int size = ((int)(inValues[3]));
            string desc = ((string)(inValues[4]));
            string password = ((string)(inValues[5]));
            return this.BeginCreateRoom(client, mode, format, size, desc, password, callback, asyncState);
        }
        
        private object[] OnEndCreateRoom(System.IAsyncResult result) {
            this.EndCreateRoom(result);
            return null;
        }
        
        private void OnCreateRoomCompleted(object state) {
            if ((this.CreateRoomCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateRoomCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateRoomAsync(System.Guid client, HyperServer.Common.GameMode mode, HyperServer.Common.GameFormat format, int size, string desc, string password) {
            this.CreateRoomAsync(client, mode, format, size, desc, password, null);
        }
        
        public void CreateRoomAsync(System.Guid client, HyperServer.Common.GameMode mode, HyperServer.Common.GameFormat format, int size, string desc, string password, object userState) {
            if ((this.onBeginCreateRoomDelegate == null)) {
                this.onBeginCreateRoomDelegate = new BeginOperationDelegate(this.OnBeginCreateRoom);
            }
            if ((this.onEndCreateRoomDelegate == null)) {
                this.onEndCreateRoomDelegate = new EndOperationDelegate(this.OnEndCreateRoom);
            }
            if ((this.onCreateRoomCompletedDelegate == null)) {
                this.onCreateRoomCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateRoomCompleted);
            }
            base.InvokeAsync(this.onBeginCreateRoomDelegate, new object[] {
                        client,
                        mode,
                        format,
                        size,
                        desc,
                        password}, this.onEndCreateRoomDelegate, this.onCreateRoomCompletedDelegate, userState);
        }
        
        public void JoinRoom(System.Guid client, System.Guid room, string password) {
            base.Channel.JoinRoom(client, room, password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginJoinRoom(System.Guid client, System.Guid room, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginJoinRoom(client, room, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndJoinRoom(System.IAsyncResult result) {
            base.Channel.EndJoinRoom(result);
        }
        
        private System.IAsyncResult OnBeginJoinRoom(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid client = ((System.Guid)(inValues[0]));
            System.Guid room = ((System.Guid)(inValues[1]));
            string password = ((string)(inValues[2]));
            return this.BeginJoinRoom(client, room, password, callback, asyncState);
        }
        
        private object[] OnEndJoinRoom(System.IAsyncResult result) {
            this.EndJoinRoom(result);
            return null;
        }
        
        private void OnJoinRoomCompleted(object state) {
            if ((this.JoinRoomCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.JoinRoomCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void JoinRoomAsync(System.Guid client, System.Guid room, string password) {
            this.JoinRoomAsync(client, room, password, null);
        }
        
        public void JoinRoomAsync(System.Guid client, System.Guid room, string password, object userState) {
            if ((this.onBeginJoinRoomDelegate == null)) {
                this.onBeginJoinRoomDelegate = new BeginOperationDelegate(this.OnBeginJoinRoom);
            }
            if ((this.onEndJoinRoomDelegate == null)) {
                this.onEndJoinRoomDelegate = new EndOperationDelegate(this.OnEndJoinRoom);
            }
            if ((this.onJoinRoomCompletedDelegate == null)) {
                this.onJoinRoomCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnJoinRoomCompleted);
            }
            base.InvokeAsync(this.onBeginJoinRoomDelegate, new object[] {
                        client,
                        room,
                        password}, this.onEndJoinRoomDelegate, this.onJoinRoomCompletedDelegate, userState);
        }
    }
}
